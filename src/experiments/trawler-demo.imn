node n1 {
    type router
    model host
    network-config {
	hostname client
	!
	interface eth0
	 ip address 10.0.4.10/24
	 ipv6 address 2001:4::10/64
	!
	interface eth2
	 ip address 10.0.0.10/24
	 ipv6 address 2001:0::10/64
	!
    }
    canvas c1
    iconcoords {199.50041206162507 121.72899568175424}
    labelcoords {199.50041206162507 153.7289956817542}
    interface-peer {eth2 n9}
    services {DefaultRoute SSH}
    interface-peer {eth0 n10}
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.0.2
	ip route add default via 2001::2
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	
	('defaultroute.sh', )
	80
	('sh defaultroute.sh', )
	
	
	
	}
    }
}

node n2 {
    type router
    model router
    network-config {
	hostname router2
	!
	interface eth2
	 ip address 10.0.9.2/24
	 ipv6 address 2001:9::2/64
	!
	interface eth1
	 ip address 10.0.1.1/24
	 ipv6 address 2001:1::1/64
	!
    }
    canvas c1
    iconcoords {356.2969643855341 259.39019361135206}
    labelcoords {356.2969643855341 287.39019361135206}
    interface-peer {eth1 n3}
    interface-peer {eth2 n9}
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.2
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	
	('defaultroute.sh', )
	80
	('sh defaultroute.sh', )
	
	
	
	}
    }
    services {zebra OSPFv2 OSPFv3 vtysh IPForward DefaultRoute}
}

node n3 {
    type router
    model router
    network-config {
	hostname dr
	!
	interface eth2
	 ip address 10.0.20.1/24
	 ipv6 address 2001:20::1/64
	!
	interface eth1
	 ip address 10.0.10.1/24
	 ipv6 address 2001:10::1/64
	!
	interface eth0
	 ip address 10.0.1.2/24
	 ipv6 address 2001:1::2/64
	!
    }
    canvas c1
    iconcoords {355.70608306116844 373.0220197665564}
    labelcoords {355.70608306116844 401.0220197665565}
    interface-peer {eth0 n2}
    interface-peer {eth1 n4}
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.10.2
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	
	('defaultroute.sh', )
	80
	('sh defaultroute.sh', )
	
	
	
	}
    }
    services {zebra OSPFv2 OSPFv3 vtysh IPForward DefaultRoute}
    interface-peer {eth2 n11}
}

node n8 {
    type router
    model router
    network-config {
	hostname router1
	!
	interface eth1
	 ip address 10.0.6.1/24
	 ipv6 address 2001:6::1/64
	!
	interface eth2
	 ip address 10.0.7.2/24
	 ipv6 address 2001:7::2/64
	!
    }
    canvas c1
    iconcoords {47.0 259.0}
    labelcoords {47.0 287.0}
    interface-peer {eth1 n5}
    interface-peer {eth2 n9}
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.6.2
	ip route add default via 2001:6::1
	
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	
	('defaultroute.sh', )
	80
	('sh defaultroute.sh', )
	
	
	
	}
    }
    services {zebra OSPFv2 OSPFv3 vtysh IPForward DefaultRoute}
}

node n7 {
    type rj45
    network-config {
	hostname eth3
	!
    }
    canvas c1
    iconcoords {45.0 610.0}
    labelcoords {45.0 638.0}
    interface-peer {0 n5}
}

node n4 {
    type router
    model router
    network-config {
	hostname nat1
	!
	interface eth0
	 ip address 10.0.10.2/24
	 ipv6 address 2001:10::2/64
	!
	interface eth1
	 ip address 10.0.3.1/24
	 ipv6 address 2001:3::1/64
	!
    }
    canvas c1
    iconcoords {355.0 498.0}
    labelcoords {355.0 526.0}
    interface-peer {eth0 n3}
    interface-peer {eth1 n6}
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.3.2
	ip route add default via 2001:3::2
	
	iptables -t nat -A POSTROUTING -o eth1 -j MASQUERADE
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	
	('defaultroute.sh', )
	80
	('sh defaultroute.sh', )
	
	
	
	}
    }
    services {zebra OSPFv2 OSPFv3 vtysh IPForward DefaultRoute}
}

node n5 {
    type router
    model router
    network-config {
	hostname nat2
	!
	interface eth1
	 ip address 10.0.5.1/24
	 ipv6 address 2001:5::1/64
	!
	interface eth0
	 ip address 10.0.6.2/24
	 ipv6 address 2001:6::2/64
	!
    }
    canvas c1
    iconcoords {46.0 497.0}
    labelcoords {46.0 525.0}
    interface-peer {eth0 n8}
    interface-peer {eth1 n7}
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.5.2
	iptables -t nat -A POSTROUTING -o eth1 -j MASQUERADE
	
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	
	('defaultroute.sh', )
	80
	('sh defaultroute.sh', )
	
	
	
	}
    }
    services {zebra OSPFv2 OSPFv3 vtysh IPForward DefaultRoute}
}

node n6 {
    type rj45
    network-config {
	hostname eth1
	!
    }
    canvas c1
    iconcoords {356.0 604.0}
    labelcoords {356.0 632.0}
    interface-peer {0 n4}
}

node n9 {
    type router
    model router
    network-config {
	hostname filter
	!
	interface eth2
	 ip address 10.0.0.2/24
	 ipv6 address 2001:0::2/64
	!
	interface eth0
	 ip address 10.0.9.1/24
	 ipv6 address 2001:9::1/64
	!
	interface eth1
	 ip address 10.0.7.1/24
	 ipv6 address 2001:7::1/64
	!
    }
    canvas c1
    iconcoords {198.0 212.0}
    labelcoords {198.0 240.0}
    interface-peer {eth0 n2}
    interface-peer {eth1 n8}
    interface-peer {eth2 n1}
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.9.2
	ip route add 128.0.0.0/1 via 10.0.7.2
	ip route add 0.0.0.0/1 via 10.0.9.2
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	
	('defaultroute.sh', )
	80
	('sh defaultroute.sh', )
	
	
	
	}
    }
    services {zebra OSPFv2 OSPFv3 vtysh IPForward DefaultRoute StaticRoute}
}

node n10 {
    type rj45
    network-config {
	hostname eth2
	!
    }
    canvas c1
    iconcoords {201.0 36.0}
    labelcoords {201.0 64.0}
    interface-peer {0 n1}
}

node n11 {
    type router
    model router
    network-config {
	hostname dp
	!
	interface eth0
	 ip address 10.0.20.10/24
	 ipv6 address 2001:20::10/64
	!
    }
    canvas c1
    iconcoords {205.0 499.0}
    labelcoords {205.0 527.0}
    interface-peer {eth0 n3}
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.20.1
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	
	('defaultroute.sh', )
	80
	('sh defaultroute.sh', )
	
	
	
	}
    }
    services {zebra OSPFv2 OSPFv3 vtysh IPForward DefaultRoute}
}

link l2 {
    nodes {n2 n3}
    bandwidth 0
}

link l3 {
    nodes {n3 n4}
    bandwidth 0
}

link l4 {
    nodes {n4 n6}
}

link l5 {
    nodes {n8 n5}
    bandwidth 0
}

link l6 {
    nodes {n5 n7}
}

link l8 {
    nodes {n9 n2}
    bandwidth 0
}

link l9 {
    nodes {n9 n8}
    bandwidth 0
}

link l10 {
    nodes {n1 n9}
    bandwidth 0
}

link l1 {
    nodes {n1 n10}
}

link l7 {
    nodes {n3 n11}
    bandwidth 0
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses no
    node_labels yes
    link_labels yes
    ipsec_configs yes
    exec_errors yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

