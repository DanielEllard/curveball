node n1 {
    type router
    model host
    network-config {
	hostname client
	!
	interface eth1
	 ip address 10.0.3.10/24
	 ipv6 address 2001:3::10/64
	!
	interface eth0
	 ip address 10.0.0.10/24
	 ipv6 address 2001::10/64
	!
    }
    canvas c1
    iconcoords {71.0 79.33333333333333}
    labelcoords {71.0 107.33333333333333}
    interface-peer {eth0 n2}
    interface-peer {eth1 n17}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.0.1
	ip route add default via 2001::1
	}
    }
    services {DefaultRoute SSH}
}

node n2 {
    type router
    model router
    network-config {
	hostname filter
	!
	interface eth0
	 ip address 10.0.0.1/24
	 ipv6 address 2001::1/64
	!
	interface eth1
	 ip address 10.0.1.1/24
	 ipv6 address 2001:1::1/64
	!
    }
    canvas c1
    iconcoords {59.0 189.33333333333334}
    labelcoords {59.0 217.33333333333334}
    interface-peer {eth1 n3}
    interface-peer {eth0 n1}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.15
	ip route add default via 2001:1::15
	
	}
    }
    services {zebra OSPFv2 OSPFv3 vtysh IPForward DefaultRoute}
}

node n3 {
    type lanswitch
    network-config {
	hostname network
	!
    }
    canvas c1
    iconcoords {83.66666666666667 301.3333333333333}
    labelcoords {83.66666666666667 329.3333333333333}
    interface-peer {e0 n13}
    interface-peer {e1 n2}
    interface-peer {e2 n20}
    interface-peer {e3 n4}
    interface-peer {e4 n14}
    interface-peer {e5 n12}
    interface-peer {e6 n10}
    interface-peer {e7 n8}
    interface-peer {e8 n11}
}

node n4 {
    type router
    model host
    network-config {
	hostname cb-quilt
	!
	interface eth0
	 ip address 10.0.1.13/24
	 ipv6 address 2001:1::13/64
	!
    }
    canvas c1
    iconcoords {288.0 391.0}
    labelcoords {288.0 419.0}
    interface-peer {eth0 n3}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.15
	ip route add default via 2001:1::15
	
	}
    }
    services {DefaultRoute SSH}
}

node n5 {
    type router
    model host
    network-config {
	hostname decoy0
	!
	interface eth0
	 ip address 10.0.20.10/24
	 ipv6 address 2001:20::10/64
	!
    }
    canvas c1
    iconcoords {304.3333333333333 12.333333333333334}
    labelcoords {304.3333333333333 40.333333333333336}
    interface-peer {eth0 n11}
}

node n6 {
    type router
    model host
    network-config {
	hostname dp0
	!
	interface eth0
	 ip address 10.0.5.10/24
	 ipv6 address 2001:5::10/64
	!
    }
    canvas c1
    iconcoords {555.0 54.0}
    labelcoords {555.0 82.0}
    interface-peer {eth0 n11}
}

node n7 {
    type router
    model host
    network-config {
	hostname decoy1
	!
	interface eth0
	 ip address 10.0.10.10/24
	 ipv6 address 2001:10::10/64
	!
    }
    canvas c1
    iconcoords {527.0 129.0}
    labelcoords {527.0 157.0}
    interface-peer {eth0 n12}
}

node n8 {
    type router
    model host
    network-config {
	hostname dp1
	!
	interface eth0
	 ip address 10.0.1.10/24
	 ipv6 address 2001:1::10/64
	!
    }
    canvas c1
    iconcoords {287.3333333333333 226.66666666666666}
    labelcoords {287.3333333333333 254.66666666666666}
    interface-peer {eth0 n3}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.15
	ip route add default via 2001:1::15
	
	}
    }
    services {DefaultRoute SSH}
}

node n9 {
    type router
    model host
    network-config {
	hostname decoy2
	!
	interface eth0
	 ip address 10.0.21.10/24
	 ipv6 address 2001:21::10/64
	!
    }
    canvas c1
    iconcoords {580.0 155.0}
    labelcoords {580.0 183.0}
    interface-peer {eth0 n19}
}

node n10 {
    type router
    model host
    network-config {
	hostname qcovert
	!
	interface eth0
	 ip address 10.0.1.12/24
	 ipv6 address 2001:1::12/64
	!
    }
    canvas c1
    iconcoords {227.0 469.0}
    labelcoords {227.0 497.0}
    interface-peer {eth0 n3}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.15
	ip route add default via 2001:1::15
	
	}
    }
    services {DefaultRoute SSH}
}

node n11 {
    type router
    model router
    network-config {
	hostname dr0
	!
	interface eth1
	 ip address 10.0.20.1/24
	 ipv6 address 2001:20::1/64
	!
	interface eth2
	 ip address 10.0.5.1/24
	 ipv6 address 2001:5::1/64
	!
	interface eth0
	 ip address 10.0.1.3/24
	 ipv6 address 2001:1::3/64
	!
    }
    canvas c1
    iconcoords {237.66666666666666 103.0}
    labelcoords {237.66666666666666 131.0}
    interface-peer {eth0 n3}
    interface-peer {eth2 n6}
    interface-peer {eth1 n5}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.15
	ip route add default via 2001:1::15
	
	}
    }
    services {zebra OSPFv2 OSPFv3 vtysh IPForward DefaultRoute}
}

node n12 {
    type router
    model router
    network-config {
	hostname dr1
	!
	interface eth1
	 ip address 10.0.10.1/24
	 ipv6 address 2001:10::1/64
	!
	interface eth0
	 ip address 10.0.1.4/24
	 ipv6 address 2001:1::4/64
	!
    }
    canvas c1
    iconcoords {293.0 161.33333333333334}
    labelcoords {293.0 189.33333333333334}
    interface-peer {eth0 n3}
    interface-peer {eth1 n7}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.15
	ip route add default via 2001:1::15
	
	}
    }
    services {zebra OSPFv2 OSPFv3 vtysh IPForward DefaultRoute}
}

node n13 {
    type router
    model router
    network-config {
	hostname dr2
	!
	interface eth3
	 ip address 10.0.7.2/24
	 ipv6 address 2001:7::2/64
	!
	interface eth0
	 ip address 10.0.1.5/24
	 ipv6 address 2001:1::5/64
	!
    }
    canvas c1
    iconcoords {271.6666666666667 329.0}
    labelcoords {271.6666666666667 357.0}
    interface-peer {eth0 n3}
    interface-peer {eth3 n19}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.15
	ip route add default via 2001:1::15
	}
    }
    services {zebra OSPFv2 OSPFv3 vtysh IPForward DefaultRoute}
}

node n14 {
    type router
    model router
    network-config {
	hostname nat
	!
	interface eth2
	 ip address 10.0.4.10/24
	 ipv6 address 2001:4::10/64
	!
	interface eth0
	 ip address 10.0.1.15/24
	 ipv6 address 2001:1::15/64
	!
    }
    canvas c1
    iconcoords {81.66666666666667 406.6666666666667}
    labelcoords {81.66666666666667 434.6666666666667}
    interface-peer {eth0 n3}
    interface-peer {eth2 n15}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	
	ip route add default via 10.0.4.2
	ip route add default via 2001:4::2
	
	iptables -t nat -A POSTROUTING -o eth2 -j MASQUERADE
	
	}
    }
    services {zebra OSPFv2 OSPFv3 vtysh IPForward DefaultRoute Firewall}
}

node n15 {
    type rj45
    network-config {
	hostname eth2
	!
	model
	
	!
    }
    canvas c1
    iconcoords {79.0 505.0}
    labelcoords {79.0 533.0}
    interface-peer {0 n14}
}

node n17 {
    type rj45
    network-config {
	hostname eth1
	!
	model
	
	!
    }
    canvas c1
    iconcoords {163.0 19.0}
    labelcoords {163.0 47.0}
    interface-peer {0 n1}
}

node n19 {
    type router
    model router
    network-config {
	hostname dr3
	!
	interface eth2
	 ip address 10.0.8.1/24
	 ipv6 address 2001:8::1/64
	!
	interface eth0
	 ip address 10.0.7.1/24
	 ipv6 address 2001:7::1/64
	!
	interface eth4
	 ip address 10.0.13.1/24
	 ipv6 address 2001:13::1/64
	!
	interface eth3
	 ip address 10.0.21.1/24
	 ipv6 address 2001:21::1/64
	!
    }
    canvas c1
    iconcoords {512.0 290.0}
    labelcoords {512.0 318.0}
    interface-peer {eth3 n9}
    interface-peer {eth4 n22}
    interface-peer {eth0 n13}
    interface-peer {eth2 n21}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.7.2
	ip route add default via 2001:7::2
	}
    }
    services {zebra OSPFv2 OSPFv3 vtysh IPForward DefaultRoute}
}

node n20 {
    type router
    model host
    network-config {
	hostname dp3
	!
	interface eth0
	 ip address 10.0.1.11/24
	 ipv6 address 2001:1::11/64
	!
    }
    canvas c1
    iconcoords {285.0 278.0}
    labelcoords {285.0 306.0}
    interface-peer {eth0 n3}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.15
	ip route add default via 2001:1::15
	
	}
    }
    services {DefaultRoute SSH}
}

node n21 {
    type router
    model host
    network-config {
	hostname decoy3
	!
	interface eth0
	 ip address 10.0.8.10/24
	 ipv6 address 2001:8::10/64
	!
    }
    canvas c1
    iconcoords {704.0 360.0}
    labelcoords {704.0 388.0}
    interface-peer {eth0 n19}
}

node n22 {
    type router
    model host
    network-config {
	hostname dp2
	!
	interface eth0
	 ip address 10.0.13.10/24
	 ipv6 address 2001:13::10/64
	!
    }
    canvas c1
    iconcoords {506.0 445.3333333333333}
    labelcoords {506.0 473.3333333333333}
    interface-peer {eth0 n19}
}

link l1 {
    nodes {n3 n13}
}

link l2 {
    nodes {n3 n2}
}

link l3 {
    nodes {n3 n20}
}

link l4 {
    nodes {n3 n4}
}

link l5 {
    nodes {n3 n14}
}

link l6 {
    nodes {n3 n12}
}

link l7 {
    nodes {n3 n10}
}

link l8 {
    nodes {n3 n8}
}

link l9 {
    nodes {n3 n11}
}

link l10 {
    nodes {n19 n9}
}

link l11 {
    nodes {n11 n6}
}

link l12 {
    nodes {n19 n22}
}

link l13 {
    nodes {n13 n19}
}

link l14 {
    nodes {n11 n5}
}

link l15 {
    nodes {n1 n2}
}

link l16 {
    nodes {n21 n19}
}

link l17 {
    nodes {n14 n15}
}

link l18 {
    nodes {n7 n12}
}

link l19 {
    nodes {n1 n17}
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses yes
    node_labels yes
    link_labels yes
    ipsec_configs yes
    exec_errors yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

