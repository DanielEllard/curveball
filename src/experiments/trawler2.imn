node n1 {
    type router
    model host
    network-config {
	hostname client
	!
	interface eth1
	 ip address 10.0.3.10/24
	 ipv6 address 2001:7::10/64
	!
	interface eth0
	 ip address 10.0.0.10/24
	 ipv6 address 2001:0::10/64
	!
    }
    canvas c1
    iconcoords {65.0 46.0}
    labelcoords {65.0 78.0}
    interface-peer {eth0 n2}
    interface-peer {eth1 n8}
}

node n2 {
    type router
    model router
    network-config {
	hostname filter
	!
	interface eth1
	 ip address 10.0.10.1/24
	 ipv6 address 2001:10::1/64
	!
	interface eth2
	 ipv6 address 2001:3::1/64
	 ip address 10.0.7.1/24
	!
	interface eth0
	 ip address 10.0.0.1/24
	 ipv6 address 2001:0::1/64
	!
    }
    canvas c1
    iconcoords {264.0 72.0}
    labelcoords {264.0 100.0}
    interface-peer {eth0 n1}
    interface-peer {eth1 n5}
    interface-peer {eth2 n4}
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add 128.0.0.0/1 via 10.0.10.2
	ip route add 0.0.0.0/1 via 10.0.7.2
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	
	('defaultroute.sh', )
	80
	('sh defaultroute.sh', )
	
	
	
	}
    }
    services {zebra OSPFv2 OSPFv3 vtysh IPForward DefaultRoute}
}

node n3 {
    type router
    model router
    network-config {
	hostname dr
	!
	interface eth2
	 ip address 10.0.20.2/24
	 ipv6 address 2001:20::2/64
	!
	interface eth0
	 ip address 10.0.1.2/24
	 ipv6 address 2001:1::2/64
	!
	interface eth1
	 ipv6 address 2001:4::1/64
	 ip address 10.0.8.1/24
	!
    }
    canvas c1
    iconcoords {328.0 258.0}
    labelcoords {328.0 286.0}
    interface-peer {eth0 n5}
    interface-peer {eth1 n6}
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.8.2
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	
	('defaultroute.sh', )
	80
	('sh defaultroute.sh', )
	
	
	
	}
    }
    services {zebra OSPFv2 OSPFv3 vtysh IPForward DefaultRoute}
    interface-peer {eth2 n9}
}

node n4 {
    type router
    model router
    network-config {
	hostname router1
	!
	interface eth0
	 ipv6 address 2001:3::2/64
	 ip address 10.0.7.2/24
	!
	interface eth1
	 ip address 10.0.5.1/24
	 ipv6 address 2001:5::1/64
	!
    }
    canvas c1
    iconcoords {144.0 160.0}
    labelcoords {144.0 188.0}
    interface-peer {eth0 n2}
    interface-peer {eth1 n6}
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.5.2
	\
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	
	('defaultroute.sh', )
	80
	('sh defaultroute.sh', )
	
	
	
	}
    }
    services {zebra OSPFv2 OSPFv3 vtysh IPForward DefaultRoute}
}

node n5 {
    type router
    model router
    network-config {
	hostname router2
	!
	interface eth1
	 ip address 10.0.1.1/24
	 ipv6 address 2001:1::1/64
	!
	interface eth0
	 ipv6 address 2001:1::2/64
	 ip address 10.0.10.2/24
	!
    }
    canvas c1
    iconcoords {386.0 161.0}
    labelcoords {387.0 189.0}
    interface-peer {eth0 n2}
    interface-peer {eth1 n3}
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.2
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	
	('defaultroute.sh', )
	80
	('sh defaultroute.sh', )
	
	
	
	}
    }
    services {zebra OSPFv2 OSPFv3 vtysh IPForward DefaultRoute}
}

node n6 {
    type router
    model router
    network-config {
	hostname internet
	!
	interface eth2
	 ipv6 address 2001:6::1/64
	 ip address 10.0.4.40/24
	!
	interface eth0
	 ipv6 address 2001:4::2/64
	 ip address 10.0.8.2/24
	!
	interface eth1
	 ip address 10.0.5.2/24
	 ipv6 address 2001:5::2/64
	!
    }
    canvas c1
    iconcoords {266.0 353.0}
    labelcoords {266.0 381.0}
    interface-peer {eth0 n3}
    interface-peer {eth1 n4}
    interface-peer {eth2 n7}
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.4.2
	iptables -t nat -A POSTROUTING -o eth2 -j MASQUERADE
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	
	('defaultroute.sh', )
	80
	('sh defaultroute.sh', )
	
	
	
	}
    }
    services {zebra OSPFv2 OSPFv3 vtysh IPForward DefaultRoute}
}

node n7 {
    type rj45
    network-config {
	hostname eth2
	!
    }
    canvas c1
    iconcoords {265.0 417.0}
    labelcoords {265.0 445.0}
    interface-peer {0 n6}
}

node n8 {
    type rj45
    network-config {
	hostname eth1
	!
    }
    canvas c1
    iconcoords {64.0 415.0}
    labelcoords {64.0 443.0}
    interface-peer {0 n1}
}

node n9 {
    type router
    model router
    network-config {
	hostname dp
	!
	interface eth0
	 ip address 10.0.20.10/24
	 ipv6 address 2001:20::10/64
	!
    }
    canvas c1
    iconcoords {439.0 316.0}
    labelcoords {439.0 344.0}
    interface-peer {eth0 n3}
}

link l1 {
    nodes {n1 n2}
    bandwidth 0
}

link l2 {
    nodes {n2 n5}
    bandwidth 0
}

link l3 {
    nodes {n5 n3}
    bandwidth 0
}

link l4 {
    nodes {n2 n4}
    bandwidth 0
}

link l5 {
    nodes {n3 n6}
    bandwidth 0
}

link l6 {
    nodes {n4 n6}
    bandwidth 0
}

link l7 {
    nodes {n6 n7}
}

link l8 {
    nodes {n1 n8}
}

link l9 {
    nodes {n9 n3}
    bandwidth 0
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses no
    node_labels yes
    link_labels yes
    ipsec_configs yes
    exec_errors yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

