node n1 {
    type router
    model router
    network-config {
	hostname vpn_client
	!
	interface eth1
	 ipv6 address 2001:2::10/64
	 ip address 10.0.4.10/24
	!
	interface eth0
	 ip address 10.0.0.10/24
	 ipv6 address 2001:0::10/64
	!
    }
    canvas c1
    iconcoords {127.0 220.0}
    labelcoords {127.0 252.0}
    interface-peer {eth0 n2}
    interface-peer {eth1 n4}
    services {zebra OSPFv2 OSPFv3 vtysh IPForward DefaultRoute}
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	
	ip route add default via 10.0.4.2
	
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	
	('defaultroute.sh',)
	80
	('sh defaultroute.sh',)
	
	
	}
    }
}

node n2 {
    type router
    model router
    network-config {
	hostname vpn_server
	!
	interface eth1
	 ipv6 address 2001:1::1/64
	 ip address 10.0.3.11/24
	!
	interface eth0
	 ip address 10.0.0.11/24
	 ipv6 address 2001:0::11/64
	!
    }
    canvas c1
    iconcoords {127.0 320.0}
    labelcoords {127.0 352.0}
    interface-peer {eth0 n1}
    interface-peer {eth1 n3}
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	
	ip route add default via 10.0.3.2
	
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	
	('defaultroute.sh',)
	80
	('sh defaultroute.sh',)
	
	
	}
    }
    services {zebra OSPFv2 OSPFv3 vtysh IPForward DefaultRoute}
}

node n3 {
    type rj45
    network-config {
	hostname eth1
	!
    }
    canvas c1
    iconcoords {126.0 412.0}
    labelcoords {126.0 440.0}
    interface-peer {0 n2}
}

node n4 {
    type rj45
    network-config {
	hostname eth2
	!
    }
    canvas c1
    iconcoords {127.0 103.0}
    labelcoords {127.0 131.0}
    interface-peer {0 n1}
}

link l1 {
    nodes {n1 n2}
    bandwidth 0
}

link l2 {
    nodes {n2 n3}
}

link l3 {
    nodes {n4 n1}
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names no
    ip_addresses no
    ipv6_addresses no
    node_labels no
    link_labels yes
    ipsec_configs yes
    remote_exec no
    exec_errors yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

