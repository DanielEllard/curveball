#!/bin/bash
#
# This material is based upon work supported by the Defense Advanced
# Research Projects Agency under Contract No. N66001-11-C-4017.
#
# Copyright 2014 - Raytheon BBN Technologies Corp.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied.  See the License for the specific language governing
# permissions and limitations under the License.

# Make a gzip'd tarball of the source for everything needed to create
# the Ubuntu 12.04 .deb package.  Also includes the source needed
# other platforms, except maybe some of the Android source.
#
# The name of the tarball is curveball-$VERSION.tgz, where $VERSION
# is generated by the create-version script (*not* the VERSION file
# in the current directory).  The VERSION file within the tarball is
# created to match this VERSION.
#
# Eventually we'll want to be able to do this from the HEAD of master,
# the HEAD of another branch, a tag, or a commit, etc.  For today, we
# just do it from whatever is checked out in the current directory.

PROJNAME=curveball

# Just grab the first 16 characters of the hashcode for the current commit.
# (If this commit isn't ever pushed, then it may become irreproducible)
#
HASHCODE=$(git log | head -1 | awk '{print $2}' \
	| sed -e 's/^\(.\{16\}\).*$/\1/')

DATESTR=$(date +"%Y%m%d-%H%M")

SCRIPTDIR=$(/usr/bin/dirname $(/usr/bin/which "$0"))
DESCRIBE_BUILD_TOOL=${SCRIPTDIR}/describe-build

# Use create-version when making a directory; use create-version
# to make a date-based string that makes sense for exports.
#
VERSION=$("${SCRIPTDIR}"/create-version)

if [ -d "${TARGETDIR}" ]; then
    rm -rf "${TARGETDIR}"
    if [ $? -ne 0 ]; then
	echo "ERROR: cannot remove ${TARGETDIR}"
	exit 1
    fi
fi

# Run in the parent of the packaging directory, so that we fetch
# all of src.
#
BUILD_INFO=$($DESCRIBE_BUILD_TOOL)

cd "${SCRIPTDIR}/.."

DIRNAME="${PROJNAME}-${VERSION}"
BASEDIR="${HOME}/tmp"
TARGETDIR="${BASEDIR}/${DIRNAME}"

# If the target directory already exists, it's probably filled
# with stuff from a previous build.  Nuke it.
#
sudo /bin/rm -rf "${TARGETDIR}/"

git checkout-index -a -f --prefix="${TARGETDIR}/"

ROOT="${TARGETDIR}/src"

remove_quilting() {

    echo "Omitting quilting libraries and scripts"

    rm -rf "${ROOT}/python/cb/quilt"
    for app in quilt-server quilt-client ctm; do
	rm -f "${ROOT}/scripts/${app}"
    done
}

# Remove parts of the source tree that are unnecessary
# for building the essential Curveball client and servers
#
for dir in \
	C android attic bitarray BitTornado ears firefox grazer \
	openssl packetplay sentinels trawler web-test ; do
    echo "Omitting $dir"
    rm -rf "${ROOT}/${dir}"
done

for tarball in \
	click/click-09222011.tar.gz \
	click/click-08072012.tar.gz \
	click/click-01072013.tar.gz \
	click/click-01102014.tar.gz \
	nss/nss-3.13.3/nss-3.13.3.tar.gz ; do
    echo "Omitting $tarball"
    rm -rf "${ROOT}/${tarball}"
done

for extra in \
	nss/python-nss-0.11 python/cb/trawl \
	python/socksipy python/tests \
	tests/stress-client \
	sentinels/keys docs/OLD \
	python/cb/ct/http/DECOY_HOSTS.txt \
	python/cb/ct/http/good-http.txt \
	python/cb/ct/http/MULTIFLOW.txt \
	python/cb/ct/httpuni/unidirectional-mole-code-changes.txt \
	; do

    echo "Omitting $extra"
    rm -rf "${ROOT}/${extra}"
done

# The scripts directory is filled with many obsolete files.
# Move everything into an "old-scripts" directory and then
# move only the essential scripts back.
#
mv "${ROOT}/scripts" "${ROOT}/old-scripts"
mkdir "${ROOT}/scripts"

for script in \
    cb-bdh-setup cb-cleanup-dr cb-install cb-key-setup cbkm \
    cb-noc-dhblacklist cb-noc-create-sentinel-files cb-noc-cleanup \
    cb-shutdown cb-startup client-key-config client.py \
    curveball-key-change decoyproxy.conf decoyproxy.py dr.py \
    install-ca-cert install-node-cert \
    mini-httpd \
    my-tcp4-conns pin-tcp4-route \
    push-baddh push-baddh-core \
    push-sentinels push-sentinels-core \
    vpn-subnet ;
do
    mv "${ROOT}/old-scripts/${script}" "${ROOT}/scripts"
done
rm -rf "${ROOT}/old-scripts"

# Don't put quilting in the release until the new impl
# is stable
#
remove_quilting

# Replace the internal Makefile with BBN flags with
# the generic Makefile
#
cp "${ROOT}/click/Makefile.deb" "${ROOT}/click/Makefile"

# Set up the build-info and VERSION files in the exported directory,
# and update the _VERSION_ placeholder in the docs.
#
echo "${BUILD_INFO}" > "${ROOT}"/build-info.txt
echo "${VERSION}" > "${ROOT}"/packaging/VERSION

for doc in ${ROOT}/docs/*.htm ; do
    cat "${doc}" | sed -e "s/_VERSION_/$VERSION/g" > "${doc}.tmp"
    mv "${doc}.tmp" "${doc}"
done

( cd "${BASEDIR}" ; tar zcf "${DIRNAME}.tgz" "${DIRNAME}" )

# Now that we're done with the directory, remove it
# (and keep the tarball)

rm -rf "${TARGETDIR}"
